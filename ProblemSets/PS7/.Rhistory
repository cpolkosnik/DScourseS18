getSymbols("XOM", src='yahoo', from="2015-01-01")
# Understanding data pulled
XOM %>% class()
XOM %>% str()
XOM %>% head()
XOM %>%
Ad() %>%
chartSeries()
# Doing Technical analysis on XOM i
XOM %>%
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2015-2018',
theme="white"
)
XOM %>%
Ad() %>%
dailyReturn(type = 'log') %>%
head()
# Understanding data pulled
XOM %>% class()
# Calling quantmod
library("quantmod")
# Gathering historical stock data for Exxon Mobil since 2015
getSymbols("XOM", src='yahoo', from="2015-01-01")
# Understanding data pulled
XOM %>% class()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class(XOM)
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class()
XOM %>% str()
XOM %>% head()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Calling quantmod
library("quantmod")
# Gathering historical stock data for Exxon Mobil since 2015
getSymbols("XOM", src='yahoo', from="2015-01-01")
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class()
XOM %>% str()
XOM %>% head()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Adding Fundamental Technical analysis
XOM %>%
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2015-2018',
theme="white"
)
# Gathering Log of daily returns for Exxon Mobil
XOM %>%
Ad() %>%
dailyReturn(type = 'log') %>%
head()
# Using Log returns to analyze distribution and define variable for creation of plot
XOM_log_returns <- XOM %>%
Ad() %>%
dailyReturn(type = "log")
names(XOM_log_returns) <- "XOM.Log.Returns"
# Plotting the log returns using a histogram
XOM_log_returns %>%
ggplot(aes(x = XOM.Log.Returns)) +
geom_histogram(bins = 100) +
geom_density() +
geom_rug(alpha = 0.5)
# Using Log returns to analyze distribution and define variable for creation of plot
XOM_log_returns <- XOM %>%
Ad() %>%
dailyReturn(type = "log")
names(XOM_log_returns) <- "XOM.Log.Returns"
# Plotting the log returns using a histogram
library(ggplot2)
XOM_log_returns %>%
ggplot(aes(x = XOM.Log.Returns)) +
geom_histogram(bins = 100) +
geom_density() +
geom_rug(alpha = 0.5)
# Gathering Log of daily returns for Exxon Mobil
XOM %>%
Ad() %>%
dailyReturn(type = 'log') %>%
head()
# Adding Fundamental Technical analysis
XOM %>%
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2015-2018',
theme="white"
)
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class()
XOM %>% str()
XOM %>% head()
# Calling quantmod
library("quantmod")
# Gathering historical stock data for Exxon Mobil since 2015
getSymbols("XOM", src='yahoo', from="2015-01-01")
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class()
XOM %>% str()
XOM %>% head()
# Using Chart Series function to visualize the stock performance
XOM %>% Ad() %>% chartSeries()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Calling quantmod
library("quantmod")
# Gathering historical stock data for Exxon Mobil since 2015
getSymbols("XOM", src='yahoo', from="2015-01-01")
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class()
XOM %>% str()
XOM %>% head()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Adding Fundamental Technical analysis
XOM %>%
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2015-2018',
theme="white"
)
# Understanding data pulled
library(magrittr) #for pipe operator
XOM %>% class()
XOM %>% str()
XOM %>% head()
# Using Chart Series function to visualize the stock performance
XOM %>%
Ad() %>%
chartSeries()
# Gathering Log of daily returns for Exxon Mobil
XOM %>%
Ad() %>%
dailyReturn(type = 'log') %>%
head()
# Using Log returns to analyze distribution and define variable for creation of plot
XOM_log_returns <- XOM %>%
Ad() %>%
dailyReturn(type = "log")
names(XOM_log_returns) <- "XOM.Log.Returns"
# Plotting the log returns using a histogram
library(ggplot2)
XOM_log_returns %>%
ggplot(aes(x = XOM.Log.Returns)) +
geom_histogram(bins = 100) +
geom_density() +
geom_rug(alpha = 0.5)
#setting wordking directory
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Managerial II/HW3")
titanic <- read.csv("titanic.csv")
View(titanic)
#setting wordking directory
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Managerial II/HW3")
titanic <- read.csv("titanic.csv")
# Probability values
P1 <- 0.3
P2 <- 0.2
P3 <- 0.3
P4 <- 0.2
# Theta Values
T1 <- 0.15
T2 <- 0.25
T3 <- 0.5
T4 <- 0.75
T12 <- (T1^9 - (1-T1)^3)
T14 <- (T12*T1)/Fx
# New Theta Values
T12 <- (T1^9 - (1-T1)^3)
T22 <- (T2^9 - (1-T2)^3)
T32 <- (T2^9 - (1-T3)^3)
T42 <- (T2^9 - (1-T4)^3)
# Creating function for total probability
fx <- (T12*P1)+(T22*P2)+(T32*P3)+(T42*P4)
# Posterior distribution
T14 <- (T12*T1)/Fx
# Posterior distribution
T14 <- (T12*T1)/Fx
# Creating function for total probability
Fx <- (T12*P1)+(T22*P2)+(T32*P3)+(T42*P4)
# Posterior distribution
T14 <- (T12*T1)/Fx
T24 <- (T22*T2)/Fx
T34 <- (T32*T3)/Fx
T44 <- (T42*T4)/Fx
# Posterior distribution
T14 <- (T12*T1)/Fx
T24 <- (T22*T2)/Fx
T34 <- (T32*T3)/Fx
T44 <- (T42*T4)/Fx
PD <- T14+T24+T34+T44
PD
#setting wordking directory
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Managerial II/HW3")
# loading data of use
titanic <- read.csv("titanic.csv")
Survived <- titanic$Survived
Gender <- titanic$Sex
Class <- titanic$Pclass
table1 <- table(Survived, Gender, Class)
Survived <- titanic$Survived
Gender <- titanic$Sex
Class <- titanic$Pclass
table1 <- table(Survived, Gender, Class)
JD <- prop.table(table1)
JD
table1 <- table(Survived<-titanic$Survived,Sex<-titanic$Sex, Pclass<-titanic$Pclass)
table1
JD <- prop.table(table1)
JD
# Creating table in one line of code
table1 <- table(Survived<-titanic$Survived,Sex<-titanic$Sex, Pclass<-titanic$Pclass)
table1
JD <- prop.table(table1)
JD
# Creating table in one line of code
table1 <- table(Survived<-titanic$Survived,Sex<-titanic$Sex, Pclass<-titanic$Pclass)
table1
JD <- prop.table(table1)
JD
# Probability values
P1 <- 0.3
P2 <- 0.2
P3 <- 0.3
P4 <- 0.2
# Theta Values
T1 <- 0.15
T2 <- 0.25
T3 <- 0.5
T4 <- 0.75
# Applying Bayes' Theorem
# P(Identical | Same) / P(Fraternal | Same) = [P(Identical)/P(Fraternal)] * (frac-Identical/frac-Fraternal)
Identical <- 1/3
Fraternal <- 2/3
frac_identical <- 1
frac_fraternal <- 1/2
Answer <- (Identical/Fraternal) * (frac_identical/frac_fraternal)
Answer
# P(Y|X) = [[P(X|Y)*P(Y)] / P(X)] =   [[P(X|Y)P(Y)]/Summation(P(X|Yj)*P(Yj))}]
# Applying Bayes' Theorem
# P(Identical | Same) / P(Fraternal | Same) = [P(Identical)/P(Fraternal)] * (frac-Identical/frac-Fraternal)
Identical <- 1/3
Fraternal <- 2/3
frac_identical <- 1
frac_fraternal <- 1/2
Answer <- (Identical/Fraternal) * (frac_identical/frac_fraternal)
Answer
Total <- 1000
Qualified <- 800
Unqualified <- 2000
QualifiedWithInterview <- 0.90
QualifiedWithPoorInterview <- 0.10
NotQualifiedWithInterview <- 0.10
NotQualifiedWithPoorInterview <- 0.80
QualifiedProbability <- (Qualified/Total)*(QualifiedWithInterview)
QualifiedProbability
Total <- 1000
Qualified <- 800
Unqualified <- 200
QualifiedWithInterview <- 0.90
QualifiedWithPoorInterview <- 0.10
NotQualifiedWithInterview <- 0.10
NotQualifiedWithPoorInterview <- 0.80
QualifiedProbability <- (Qualified/Total)*(QualifiedWithInterview)
QualifiedProbability
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, ((1/2)*(2/3)),((1/2)*(2/3)) ncol = 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, ((1/2)*(2/3)),(1/2)*(2/3) ncol = 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, ((1/2)*(2/3)),(1/2)*(2/3) ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3, 1/2*2/3 ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, (1/2)*(2/3), (1/2)*(2/3) ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, (.5)*(2/3), (.5)*(2/3) ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3, 1/2*2/3 ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3, 0.5*2/3 ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3, 0.5*2/3 ncol= 2, byrow=T)
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3, 0.5*2/3 ncol= 2, byrow=T)
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3, 1/2*2/3) ncol= 2, byrow=T)
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3, 0.5*2/3) ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3, 0,0.5*2/3) ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3, 0, .5*2/3) ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3,0,.5*2/3), ncol= 2, byrow=T))
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 0.5*2/3,0,.5*2/3), ncol= 2, byrow=T)
table2
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3,0,.5*2/3), ncol= 2, byrow=T)
table2
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3,0,1/2*2/3), ncol= 2, byrow=T)
table2
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3,0,1/2*2/3), ncol= 2, byrow=T)
table2
row.names(table2) <- c("Same", "Different")
colnames(table2) <- c("Identical", "Fraternal")
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3,0,1/2*2/3), ncol= 2, byrow=T)
table2
row.names(table2) <- c("Same", "Different")
colnames(table2) <- c("Identical", "Fraternal")
table 2
# Setting up table to visually understand the probability
table2 <- matrix(c(1/3, 1/2*2/3,0,1/2*2/3), ncol= 2, byrow=T)
row.names(table2) <- c("Same", "Different")
colnames(table2) <- c("Identical", "Fraternal")
table2
Total <- 1000
Qualified <- 800
Unqualified <- 200
QualifiedWithInterview <- 0.90
QualifiedProbability <- (Qualified/Total)*(QualifiedWithInterview)
QualifiedProbability
install.packages("MixedDataImpute")
install.packages("mice")
install.packages("stargazer")
data <- read.csv("wages.csv")
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science For Economists/PS7")
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science For Economists/PS7")
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science For Economists/PS7")
getwd()
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science For Economists/PS7")
getwd()
setwd("/Users/conradpolkosnik/Desktop/School/Semester\10/Data\Science\For\Economists/PS7")
getwd()
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science for Economists/DScourseS18/ProblemSets/PS7")
data <- read.csv("wages.csv")
View(data)
# Setting Working Directory
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science for Economists/DScourseS18/ProblemSets/PS7")
# Importing Data
data <- read.csv("wages.csv")
# Dropping observations where hgc or tenure are missing
data2 <- na.omit(data)
data2
View(data2)
# Using Stargazer to produce a summary table
library(stargazer)
summary.stat(data2)
# Using Stargazer to produce a summary table
library(stargazer)
stargazer(data2)
# Using Stargazer to produce a summary table
library(stargazer)
stargazer(data2)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2, summary=FALSE)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2[1:4], summary=FALSE, rownames=FALSE)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(summary.stat = data2)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2[1:4], summary=FALSE, rownames = FALSE)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2[1:4,], summary=FALSE, rownames = FALSE)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2, type="latex")
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2)
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2, type="latex")
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2, type="latex")
complete.cases(data2$logwage)
Regression1<- lm(logwage~., data=data2)
stargazer(Regression1)
complete.cases(data$logwage)
Regression<- lm(logwage~., data=data2)
stargazer(Regression1)
wages$logwage[is.na(wages$logwage)] <- mean(wages$logwage)
complete.cases(data2$logwage)
Regression<- lm(logwage~., data=data2)
stargazer(Regression)
# Dropping observations where hgc or tenure are missing
data2 <- na.omit(data)
data2
colSums(is.na(data2))
# Dropping observations where hgc or tenure are missing
data2 <- na.omit(data)
data2
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2, type = "latex")
complete.cases(data2$logwage)
RegressionModel<- lm(logwage~., data=data2)
stargazer(RegressionModel, type="latex")
complete.cases(data2$logwage)
RegressionModel<- lm(logwage~., data=data2)
stargazer(RegressionModel, type="latex")
data2$logwage[is.na(data2$logwage)] <- mean(data2$logwage)
data2Mice = mice(data2, seed = 123456)
data2Mice = mice(data2, seed = 12345)
install.packages(mice)
install.packages("mice")
library(mice)
data2Mice = mice(data2, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
library(mice)
data2Mice = mice(data2, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
data2$logwage[is.na(data2$logwage)] <- mean(data2$logwage)
library(mice)
data2Mice = mice(data2, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
# Mean imputation for log wages
data2$logwage[is.na(data2$logwage)] <- mean(data2$logwage)
Model2 <- lm(logwage~. , data=data2)
Model2
stargazer(RegressionModel, Model2)
# Setting Working Directory
setwd("/Users/conradpolkosnik/Desktop/School/Semester 10/Data Science for Economists/DScourseS18/ProblemSets/PS7")
# Importing Data
data <- read.csv("wages.csv")
# Dropping observations where hgc or tenure are missing
data2 <- na.omit(data)
data2
# Using Stargazer to produce summary statistics on data
library(stargazer)
stargazer(data2, type = "latex")
complete.cases(data2$logwage)
RegressionModel<- lm(logwage~., data=data2)
stargazer(RegressionModel, type="latex")
# Mean imputation for log wages
data2$logwage[is.na(data2$logwage)] <- mean(data2$logwage)
Model2 <- lm(logwage~. , data=data2)
Model2
library(mice) # loading mice package
data2Mice = mice(data2, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
stargazer(RegressionModel, Model2)
library(mice) # loading mice package
data2Mice = mice(data, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
stargazer(RegressionModel, Model2)
library(mice) # loading mice package
data2Mice = mice(data2, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
library(mice) # loading mice package
data2Mice = mice(data, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
library(mice) # loading mice package
data2Mice = mice(data2, seed = 12345)
fit<-with(data2Mice, lm(logwage~ hgc+college+tenure+age+married))
round(summary(pool(fit)))
